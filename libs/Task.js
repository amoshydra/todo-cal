/**
 * A task in this application represent a hybrid of both a Task and Calendar event
 * See documentations:
 *   - https://developers.google.com/google-apps/calendar/v3/reference/events#resource
 *   - https://developers.google.com/google-apps/tasks/v1/reference/tasks#resource
 */
import moment from 'moment';

const PROPERTY_TO_SKIP = {
  // Clashing property that are generated by Google
  id: true,
  etag: true,
  updated: true,

  // clashing property
  status: true,

  // Property that will be handled internally
  summary: true,
  title: true,
  notes: true,
  description: true,
};

/**
 * @param {string} title - of the task and calendar
 * @param {string} time - of the task and calendar
 */
const Task = function Task(title, resources = {}) {
  this.update(title, resources);
};

Task.prototype.update = function update(title, resources = {}) {
  resources.start = resources.start || { dateTime: moment().add(5, 'seconds').format() };
  resources.end = resources.end || { dateTime: moment().add(1, 'hours').format() };

  Object.keys(resources).forEach((key) => {
    if (!PROPERTY_TO_SKIP[key]) {
      const resource = resources[key];
      this[key] = resource;
    }
  });

  // Handle internal property
  this.summary = title;
  this.title = title;
};

export default Task;
